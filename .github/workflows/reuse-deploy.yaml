name: Deployment -  Reusable Workflow

on:
  workflow_call:
    inputs:
      GKE_CLUSTER:
        required: true
        default: "agric-os-prod-v2"
        type: string
      GKE_ZONE:
        required: true
        type: string
        default: "europe-west3-a"
      REPLICAS:
        required: true
        type: string
      TAG:
        required: true
        type: string
      IMAGE:
        required: true
        type: string
      DB_USERNAME:
        required: true
        type: string
      DB_PASSWORD:
        required: true
        type: string
      ENVIRONMENT: 
        required: true
        type: string
      ROUTE: 
        required: true
        type: string
    secrets:
      gcp_credentials:
        required: true
    outputs:
      INGRESS_URL:
        value: ${{ jobs.reuse-deploy.outputs.INGRESS_URL }}

jobs: 
  # Job 4: Redeploy Kubernetes Deployment
  Reuse-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{inputs.ENVIRONMENT}}
      url: http://${{ steps.ingress_ip.outputs.INGRESS_IP }}/${{inputs.ROUTE}}
    outputs:
      INGRESS_URL: ${{ steps.ingress_ip.outputs.INGRESS_IP }}
    permissions:
      contents: 'read'
      id-token: 'write' # Needed for OIDC token generation

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      id: gcp-auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.gcp_credentials }}'
        # workload_identity_provider: '/projects/524687905739/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        # service_account: 'agricos-prod-access-from-githu@agri-os-prod.iam.gserviceaccount.com'
        # audience: "//iam.googleapis.com/projects/agri-os-prod /locations/global/workloadIdentityPools/github-pool/providers/github-provider"

    - name: Get GKE Credentials
      id: get-credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{inputs.GKE_CLUSTER}}
        location: ${{inputs.GKE_ZONE}}

    - name: Replace token in manifest files
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '_{_'
        tokenSuffix: '_}_'
        files: '["applications/service-envs/dev/*.yaml"]'
      env:
        NAMESPACE: ${{inputs.NAMESPACE}}
        REPLICAS: ${{inputs.REPLICAS}}
        IMAGE: ${{inputs.IMAGE}}:${{inputs.TAG}}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq


    - name: Create or update application secret
      run: |
        echo "apiVersion: v1
        kind: Secret
        metadata:
          name: farming-secret
        type: Opaque
        stringData:
          DB_HOST: ${{ inputs.DB_HOST }}
          DB_USERNAME: ${{ inputs.DB_USERNAME }}
          DB_PASSWORD: ${{ inputs.DB_PASSWORD }}" | kubectl apply -f -

        kubectl get secret farming-secret -o yaml


    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - name: Deploy manifest
      run: 'kubectl apply -f applications/service-envs/dev'

    - name: Retrieve ingress Host Url IP
      id: ingress_ip
      run: |
        INGRESS_IP=$(kubectl get ingress -o json | jq -r '.items[0].status.loadBalancer.ingress[0].ip')
        echo "INGRESS_IP=$INGRESS_IP" >> $GITHUB_OUTPUT

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: core-api-alert
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_LINK_NAMES: true
        SLACK_MSG_AUTHOR: ${{github.actor}}
        SLACK_TITLE: Agric OS Deployment
        SLACK_MESSAGE: "${{ github.event.head_commit.message }} || App_version:${{ env.APP_VERSION }} "
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK  }}
      if: failure()

  Reuse-Integration:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: reuse-deploy
    steps:
    - name: Check previous job
      run: echo "hello ${{ needs.reuse-deploy.outcome }}"

    - name: Run application Testing using curl to ingress ip
      env:
        URL: ${{needs.reuse-deploy.outputs.INGRESS_URL}}
      run: |
        echo "http://$URL/${{inputs.ROUTE}}"
        echo "-------------------------"
        status_code=$(curl -i -s http://$URL/${{inputs.ROUTE}} | grep HTTP | awk '{print $2}')
        if [[ $status_code -eq 200 ]]; then
          echo "API endpoint is accessible"
        else
          echo "404 Error: Resource not found"
          exit 1  # Exit with an error code to indicate failure
        fi
          
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: core-api-alert
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_LINK_NAMES: true
        SLACK_MSG_AUTHOR: ${{github.actor}}
        SLACK_TITLE: Agric OS Deployment
        SLACK_MESSAGE: "${{ github.event.head_commit.message }} || App_version:${{ env.APP_VERSION }} "
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK  }}
      if: always()